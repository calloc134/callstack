# ビルド用ステージ
FROM node:latest as build-stage

# 作業ディレクトリを指定
WORKDIR /home

# パッケージの存在するパス
ARG PACKAGE_PATH=packages/frontend
ARG SCHEMA_PATH=./graphql/schemas/*.graphql
# ARG OPERATION_PATH=/home/graphql/operations/*.graphql

# logtoのエンドポイントを指定
ARG VITE_LOGTO_ENDPOINT=https://auth.localhost
# logtoのアプリケーションIDを指定
ARG VITE_LOGTO_APPID=dummy
# logtoのAPIリソースを指定
ARG VITE_LOGTO_API_RESOURCE=https://dummy

# ホスト名(バックエンドへのフェッチに必須)
ARG VITE_HOSTNAME=dummy.dummy

# package.jsonのみをコピーする
COPY ${PACKAGE_PATH}/package.json ./

# pnpmに切り替える
RUN corepack enable pnpm
RUN corepack prepare pnpm@latest --activate

# 依存関係をインストールする
RUN pnpm install

# データの引継ぎ
COPY ${PACKAGE_PATH}/ ./
COPY ${PACKAGE_PATH}/../graphql/ ./graphql/

# graphql codegenを実行する
RUN pnpm codegen

# ビルドする
# 環境変数としてホスト名、エンドポイント、アプリケーションID、APIリソースを渡す
RUN VITE_HOSTNAME=${VITE_HOSTNAME} VITE_LOGTO_ENDPOINT=${VITE_LOGTO_ENDPOINT} VITE_LOGTO_APPID=${VITE_LOGTO_APPID} VITE_LOGTO_API_RESOURCE=${VITE_LOGTO_API_RESOURCE} pnpm build

# 本番用ステージ
# nginxイメージを利用
FROM nginx:latest as production-stage

# nginx構成ファイルのディレクトリ
ARG INFRADIR=packages/infra

# データを引き継ぐ
COPY --from=build-stage /home/dist /usr/share/nginx/dist

# COPY ${INFRADIR}/config/nginx-prod /etc/nginx/conf.d 
COPY ${INFRADIR}/config/nginx-prod /etc/nginx/templates